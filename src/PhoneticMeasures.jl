
"""
  `syllable_count(string, vowels="aeiouy", exceptions=[r"[aeiou]les?\b",r"[^l]e\b"])`

  Counts the syllables in a string.

  The algorithm given simply counts contiguous sequences of vowels, adjusting
  for regex-specified exceptions, which reduce the count by one. Where a string
  with multiple words is input, the result is the sum for each word.

  The default arguments for `vowels` and `exceptions` mean that the function
  gives good output for English text, though certain words like 'Maria' will trip
  it up. Replacing vowels and rules would allow for the algorithm to apply for other
  languages.

  The function should always return at least one syllable per word.
"""
function syllable_count(word::Union{String,SubString}, vowels::String="aeiouy", exceptions::Array{Regex,1}=[r"[aeiou][lr]es?\b", r"[^lri]es?\b"])

  #Catch sentence input
  if occursin(" ", word)
    words = split(word, [' ','-','\n','\t'])
    return sum(map(w -> syllable_count(w, vowels, exceptions), words))
  end

  #Count vowels.
  word = lowercase(word)
  lc = ' '
  count = 0
  for char in word
    if char in vowels && ! (lc in vowels)
      count += 1
    end
    lc = char
  end

  #Remove silent endings
  for ex in exceptions
    if occursin(ex,word) && count > 1
      count -= 1
    end
  end

  return count
end

num_matches(r::Regex, w::AbstractString) = length(collect(eachmatch(r, w)))

function time_word(word, language)
    if length(word) == 0
      return 0
    elseif language == "de"
      return 0.201443 + 0.247255*num_matches(r"[0-9]{2}", word) + 0.220354*num_matches(r"[0-9]", word) + 0.155791*num_matches(r"q", word) + 0.147522*num_matches(r"x", word) + 0.141111*num_matches(r"[0-9]{4}", word) + 0.111575*num_matches(r"\u00ee", word) + 0.109382*num_matches(r"[^a\u00e2\u00e1\u00e0\u00e4\u01ce\u0103\u00e3\u0101\u00e6\u01e3e\u00ea\u00e9\u00e8\u00eb\u011b\u0115\u0113i\u00ef\u00ed\u00ee\u01d0\u012d\u0129\u0131\u012bo\u00f6\u00f3\u00f4\u00f6\u01d2\u014f\u00f5u\u00fa\u00f9\u00fbu\u01d4\u016d\u0169\u016by\u00fdbcdfghjklmnpqrstvwxz\u00f1\u00e7\u0159]", word) + 0.099467*num_matches(r"o", word) + 0.094990*num_matches(r"a", word) + 0.089802*num_matches(r"z", word) + 0.088050*num_matches(r"\u00f3", word) + 0.080506*num_matches(r"\u00e1", word) + 0.079824*num_matches(r"\u00e2", word) + 0.078788*num_matches(r"y", word) + 0.073479*num_matches(r"\u00e0", word) + 0.068338*num_matches(r"\u00e4", word) + 0.066598*num_matches(r"s", word) + 0.063880*num_matches(r"\u00ef", word) + 0.062730*num_matches(r"i", word) + 0.061144*num_matches(r"k", word) + 0.057448*num_matches(r"\u00f4", word) + 0.055320*num_matches(r"\u00e9", word) + 0.055251*num_matches(r"\u00e8", word) + 0.053560*num_matches(r"v", word) + 0.052198*num_matches(r"\u00ed", word) + 0.050962*num_matches(r"\u00ea", word) + 0.049994*num_matches(r"b", word) + 0.049982*num_matches(r"f", word) + 0.047746*num_matches(r"e", word) + 0.047723*num_matches(r"^[a\u00e2\u00e1\u00e0\u00e4\u01ce\u0103\u00e3\u0101\u00e6\u01e3e\u00ea\u00e9\u00e8\u00eb\u011b\u0115\u0113i\u00ef\u00ed\u00ee\u01d0\u012d\u0129\u0131\u012bo\u00f6\u00f3\u00f4\u00f6\u01d2\u014f\u00f5u\u00fa\u00f9\u00fbu\u01d4\u016d\u0169\u016by\u00fd]", word) + 0.047120*num_matches(r"j", word) + 0.046027*num_matches(r"p", word) + 0.045183*num_matches(r"t", word) + 0.040199*num_matches(r"r", word) + 0.039382*num_matches(r"d", word) + 0.037563*num_matches(r"\u00f1", word) + 0.037290*num_matches(r"\u00f6", word) + 0.037290*num_matches(r"\u00f6", word) + 0.036302*num_matches(r"^[bcdfghjklmnpqrstvwxz\u00f1\u00e7\u0159]{3}", word) + 0.035693*num_matches(r"g", word) + 0.034323*num_matches(r"\u00fb", word) + 0.032789*num_matches(r"u", word) + 0.032789*num_matches(r"u", word) + 0.032587*num_matches(r"[a\u00e2\u00e1\u00e0\u00e4\u01ce\u0103\u00e3\u0101\u00e6\u01e3e\u00ea\u00e9\u00e8\u00eb\u011b\u0115\u0113i\u00ef\u00ed\u00ee\u01d0\u012d\u0129\u0131\u012bo\u00f6\u00f3\u00f4\u00f6\u01d2\u014f\u00f5u\u00fa\u00f9\u00fbu\u01d4\u016d\u0169\u016by\u00fd][bcdfghjklmnpqrstvwxz\u00f1\u00e7\u0159]", word) + 0.030861*num_matches(r"n", word) + 0.029051*num_matches(r"m", word) + 0.027110*num_matches(r"l", word) + 0.027075*num_matches(r"w", word) + 0.025398*num_matches(r"h", word) + 0.023578*num_matches(r"\u00e7", word) + 0.013630*num_matches(r"[a\u00e2\u00e1\u00e0\u00e4\u01ce\u0103\u00e3\u0101\u00e6\u01e3e\u00ea\u00e9\u00e8\u00eb\u011b\u0115\u0113i\u00ef\u00ed\u00ee\u01d0\u012d\u0129\u0131\u012bo\u00f6\u00f3\u00f4\u00f6\u01d2\u014f\u00f5u\u00fa\u00f9\u00fbu\u01d4\u016d\u0169\u016by\u00fd]\$", word) + 0.012129*num_matches(r"c", word) + 0.002293*num_matches(r"\u00eb", word)
    elseif language == "en-US"
      return 0.288128 + 0.954096*num_matches(r"[0-9]{4}", word) + 0.356994*num_matches(r"[0-9]", word) + 0.289716*num_matches(r"\u0169", word) + 0.260762*num_matches(r"^[bcdfghjklmnpqrstvwxz\u00f1\u00e7\u0159]{3}", word) + 0.202507*num_matches(r"\u00f1", word) + 0.189280*num_matches(r"q", word) + 0.172014*num_matches(r"x", word) + 0.138827*num_matches(r"n", word) + 0.132514*num_matches(r"m", word) + 0.128558*num_matches(r"\u012b", word) + 0.117963*num_matches(r"d", word) + 0.115260*num_matches(r"\u00ed", word) + 0.111563*num_matches(r"b", word) + 0.109092*num_matches(r"v", word) + 0.107073*num_matches(r"\u00e7", word) + 0.105800*num_matches(r"p", word) + 0.104254*num_matches(r"l", word) + 0.100262*num_matches(r"r", word) + 0.099480*num_matches(r"j", word) + 0.097076*num_matches(r"t", word) + 0.096195*num_matches(r"c", word) + 0.095999*num_matches(r"\u00fa", word) + 0.090362*num_matches(r"[0-9]{2}", word) + 0.082615*num_matches(r"\u016b", word) + 0.080488*num_matches(r"s", word) + 0.075311*num_matches(r"g", word) + 0.075048*num_matches(r"z", word) + 0.067591*num_matches(r"k", word) + 0.065711*num_matches(r"f", word) + 0.065148*num_matches(r"[a\u00e2\u00e1\u00e0\u00e4\u01ce\u0103\u00e3\u0101\u00e6\u01e3e\u00ea\u00e9\u00e8\u00eb\u011b\u0115\u0113i\u00ef\u00ed\u00ee\u01d0\u012d\u0129\u0131\u012bo\u00f6\u00f3\u00f4\u00f6\u01d2\u014f\u00f5u\u00fa\u00f9\u00fbu\u01d4\u016d\u0169\u016by\u00fd][bcdfghjklmnpqrstvwxz\u00f1\u00e7\u0159]", word) + 0.063661*num_matches(r"a", word) + 0.060130*num_matches(r"y", word) + 0.059559*num_matches(r"\u0159", word) + 0.056398*num_matches(r"i", word) + 0.054900*num_matches(r"o", word) + 0.050908*num_matches(r"\u00e1", word) + 0.048779*num_matches(r"w", word) + 0.046645*num_matches(r"\u00fb", word) + 0.034323*num_matches(r"\u00e2", word) + 0.033232*num_matches(r"\u00eb", word) + 0.031705*num_matches(r"\u00f4", word) + 0.029573*num_matches(r"\u0101", word) + 0.028180*num_matches(r"u", word) + 0.028180*num_matches(r"u", word) + 0.027809*num_matches(r"\u00e4", word) + 0.026002*num_matches(r"\u00f3", word) + 0.024175*num_matches(r"[a\u00e2\u00e1\u00e0\u00e4\u01ce\u0103\u00e3\u0101\u00e6\u01e3e\u00ea\u00e9\u00e8\u00eb\u011b\u0115\u0113i\u00ef\u00ed\u00ee\u01d0\u012d\u0129\u0131\u012bo\u00f6\u00f3\u00f4\u00f6\u01d2\u014f\u00f5u\u00fa\u00f9\u00fbu\u01d4\u016d\u0169\u016by\u00fd]\$", word) + 0.021481*num_matches(r"e", word) + 0.019389*num_matches(r"\u0131", word) + 0.018713*num_matches(r"[^a\u00e2\u00e1\u00e0\u00e4\u01ce\u0103\u00e3\u0101\u00e6\u01e3e\u00ea\u00e9\u00e8\u00eb\u011b\u0115\u0113i\u00ef\u00ed\u00ee\u01d0\u012d\u0129\u0131\u012bo\u00f6\u00f3\u00f4\u00f6\u01d2\u014f\u00f5u\u00fa\u00f9\u00fbu\u01d4\u016d\u0169\u016by\u00fdbcdfghjklmnpqrstvwxz\u00f1\u00e7\u0159]", word) + 0.012112*num_matches(r"\u00e0", word) + 0.010956*num_matches(r"h", word) + 0.007262*num_matches(r"\u00ee", word) + 0.004981*num_matches(r"\u00e8", word)
    elseif language == "es"
      return 0.187036 + 0.317005*num_matches(r"\u00e3", word) + 0.315815*num_matches(r"\u0169", word) + 0.292691*num_matches(r"\u0103", word) + 0.253129*num_matches(r"\u011b", word) + 0.227771*num_matches(r"[^a\u00e2\u00e1\u00e0\u00e4\u01ce\u0103\u00e3\u0101\u00e6\u01e3e\u00ea\u00e9\u00e8\u00eb\u011b\u0115\u0113i\u00ef\u00ed\u00ee\u01d0\u012d\u0129\u0131\u012bo\u00f6\u00f3\u00f4\u00f6\u01d2\u014f\u00f5u\u00fa\u00f9\u00fbu\u01d4\u016d\u0169\u016by\u00fdbcdfghjklmnpqrstvwxz\u00f1\u00e7\u0159]", word) + 0.207797*num_matches(r"\u0159", word) + 0.189736*num_matches(r"[0-9]{2}", word) + 0.184000*num_matches(r"\u00e6", word) + 0.182175*num_matches(r"\u012b", word) + 0.167399*num_matches(r"\u00f5", word) + 0.139567*num_matches(r"\u0101", word) + 0.111823*num_matches(r"x", word) + 0.102212*num_matches(r"\u016b", word) + 0.099673*num_matches(r"k", word) + 0.099467*num_matches(r"\u00fd", word) + 0.097008*num_matches(r"z", word) + 0.090673*num_matches(r"y", word) + 0.077894*num_matches(r"\u0131", word) + 0.075144*num_matches(r"p", word) + 0.068023*num_matches(r"j", word) + 0.064888*num_matches(r"f", word) + 0.064057*num_matches(r"t", word) + 0.062861*num_matches(r"c", word) + 0.061194*num_matches(r"s", word) + 0.059466*num_matches(r"o", word) + 0.059261*num_matches(r"d", word) + 0.058316*num_matches(r"w", word) + 0.057997*num_matches(r"g", word) + 0.052533*num_matches(r"a", word) + 0.051308*num_matches(r"r", word) + 0.050576*num_matches(r"i", word) + 0.048901*num_matches(r"b", word) + 0.047846*num_matches(r"v", word) + 0.047137*num_matches(r"q", word) + 0.045976*num_matches(r"[0-9]{4}", word) + 0.043086*num_matches(r"n", word) + 0.042979*num_matches(r"m", word) + 0.040604*num_matches(r"\u00e4", word) + 0.039670*num_matches(r"h", word) + 0.039339*num_matches(r"l", word) + 0.038610*num_matches(r"[a\u00e2\u00e1\u00e0\u00e4\u01ce\u0103\u00e3\u0101\u00e6\u01e3e\u00ea\u00e9\u00e8\u00eb\u011b\u0115\u0113i\u00ef\u00ed\u00ee\u01d0\u012d\u0129\u0131\u012bo\u00f6\u00f3\u00f4\u00f6\u01d2\u014f\u00f5u\u00fa\u00f9\u00fbu\u01d4\u016d\u0169\u016by\u00fd][bcdfghjklmnpqrstvwxz\u00f1\u00e7\u0159]", word) + 0.035417*num_matches(r"e", word) + 0.032111*num_matches(r"\u00e1", word) + 0.030724*num_matches(r"^[bcdfghjklmnpqrstvwxz\u00f1\u00e7\u0159]{3}", word) + 0.023949*num_matches(r"[a\u00e2\u00e1\u00e0\u00e4\u01ce\u0103\u00e3\u0101\u00e6\u01e3e\u00ea\u00e9\u00e8\u00eb\u011b\u0115\u0113i\u00ef\u00ed\u00ee\u01d0\u012d\u0129\u0131\u012bo\u00f6\u00f3\u00f4\u00f6\u01d2\u014f\u00f5u\u00fa\u00f9\u00fbu\u01d4\u016d\u0169\u016by\u00fd]\$", word) + 0.021964*num_matches(r"\u00f6", word) + 0.021964*num_matches(r"\u00f6", word) + 0.014352*num_matches(r"u", word) + 0.014352*num_matches(r"u", word) + 0.000250*num_matches(r"[0-9]", word)
    elseif language == "fr"
      return 0.094123 + 0.524550*num_matches(r"[0-9]{4}", word) + 0.146372*num_matches(r"[0-9]{2}", word) + 0.115989*num_matches(r"\u00ef", word) + 0.075470*num_matches(r"j", word) + 0.071641*num_matches(r"w", word) + 0.067887*num_matches(r"[a\u00e2\u00e1\u00e0\u00e4\u01ce\u0103\u00e3\u0101\u00e6\u01e3e\u00ea\u00e9\u00e8\u00eb\u011b\u0115\u0113i\u00ef\u00ed\u00ee\u01d0\u012d\u0129\u0131\u012bo\u00f6\u00f3\u00f4\u00f6\u01d2\u014f\u00f5u\u00fa\u00f9\u00fbu\u01d4\u016d\u0169\u016by\u00fd]\$", word) + 0.066211*num_matches(r"[a\u00e2\u00e1\u00e0\u00e4\u01ce\u0103\u00e3\u0101\u00e6\u01e3e\u00ea\u00e9\u00e8\u00eb\u011b\u0115\u0113i\u00ef\u00ed\u00ee\u01d0\u012d\u0129\u0131\u012bo\u00f6\u00f3\u00f4\u00f6\u01d2\u014f\u00f5u\u00fa\u00f9\u00fbu\u01d4\u016d\u0169\u016by\u00fd][bcdfghjklmnpqrstvwxz\u00f1\u00e7\u0159]", word) + 0.064186*num_matches(r"g", word) + 0.062926*num_matches(r"k", word) + 0.060646*num_matches(r"y", word) + 0.059996*num_matches(r"x", word) + 0.059590*num_matches(r"f", word) + 0.057422*num_matches(r"c", word) + 0.055183*num_matches(r"\u00e7", word) + 0.054494*num_matches(r"r", word) + 0.053814*num_matches(r"z", word) + 0.051429*num_matches(r"t", word) + 0.049218*num_matches(r"s", word) + 0.044615*num_matches(r"\u00eb", word) + 0.044090*num_matches(r"i", word) + 0.043803*num_matches(r"d", word) + 0.042808*num_matches(r"\u00f6", word) + 0.042808*num_matches(r"\u00f6", word) + 0.042791*num_matches(r"b", word) + 0.042591*num_matches(r"q", word) + 0.039526*num_matches(r"p", word) + 0.038798*num_matches(r"v", word) + 0.035982*num_matches(r"\u00e9", word) + 0.034998*num_matches(r"o", word) + 0.032743*num_matches(r"[0-9]", word) + 0.031503*num_matches(r"a", word) + 0.028726*num_matches(r"[^a\u00e2\u00e1\u00e0\u00e4\u01ce\u0103\u00e3\u0101\u00e6\u01e3e\u00ea\u00e9\u00e8\u00eb\u011b\u0115\u0113i\u00ef\u00ed\u00ee\u01d0\u012d\u0129\u0131\u012bo\u00f6\u00f3\u00f4\u00f6\u01d2\u014f\u00f5u\u00fa\u00f9\u00fbu\u01d4\u016d\u0169\u016by\u00fdbcdfghjklmnpqrstvwxz\u00f1\u00e7\u0159]", word) + 0.027647*num_matches(r"h", word) + 0.027537*num_matches(r"m", word) + 0.027147*num_matches(r"l", word) + 0.025762*num_matches(r"\u00f4", word) + 0.020906*num_matches(r"^[bcdfghjklmnpqrstvwxz\u00f1\u00e7\u0159]{3}", word) + 0.020085*num_matches(r"\u00e8", word) + 0.016057*num_matches(r"n", word) + 0.014943*num_matches(r"\u00e2", word) + 0.011852*num_matches(r"u", word) + 0.011852*num_matches(r"u", word) + 0.008881*num_matches(r"\u00e0", word) + 0.006535*num_matches(r"e", word) + 0.003959*num_matches(r"\u00ea", word)
    elseif language == "it"
      return 0.216031 + 0.280613*num_matches(r"[0-9]{2}", word) + 0.219277*num_matches(r"x", word) + 0.149924*num_matches(r"[0-9]", word) + 0.145241*num_matches(r"[^a\u00e2\u00e1\u00e0\u00e4\u01ce\u0103\u00e3\u0101\u00e6\u01e3e\u00ea\u00e9\u00e8\u00eb\u011b\u0115\u0113i\u00ef\u00ed\u00ee\u01d0\u012d\u0129\u0131\u012bo\u00f6\u00f3\u00f4\u00f6\u01d2\u014f\u00f5u\u00fa\u00f9\u00fbu\u01d4\u016d\u0169\u016by\u00fdbcdfghjklmnpqrstvwxz\u00f1\u00e7\u0159]", word) + 0.115833*num_matches(r"z", word) + 0.104811*num_matches(r"c", word) + 0.104514*num_matches(r"p", word) + 0.101104*num_matches(r"t", word) + 0.096837*num_matches(r"k", word) + 0.094215*num_matches(r"q", word) + 0.092929*num_matches(r"f", word) + 0.091644*num_matches(r"s", word) + 0.075643*num_matches(r"n", word) + 0.073194*num_matches(r"g", word) + 0.071579*num_matches(r"y", word) + 0.067655*num_matches(r"j", word) + 0.066069*num_matches(r"b", word) + 0.064722*num_matches(r"e", word) + 0.059960*num_matches(r"v", word) + 0.058603*num_matches(r"i", word) + 0.057001*num_matches(r"m", word) + 0.054888*num_matches(r"w", word) + 0.053622*num_matches(r"o", word) + 0.052965*num_matches(r"d", word) + 0.052437*num_matches(r"a", word) + 0.051798*num_matches(r"l", word) + 0.051058*num_matches(r"\u00e9", word) + 0.050466*num_matches(r"\u00e1", word) + 0.049816*num_matches(r"r", word) + 0.049440*num_matches(r"\u00f9", word) + 0.048566*num_matches(r"\u00fa", word) + 0.044918*num_matches(r"\u00e2", word) + 0.034806*num_matches(r"\u00f1", word) + 0.031362*num_matches(r"u", word) + 0.031362*num_matches(r"u", word) + 0.028077*num_matches(r"\u00f3", word) + 0.023515*num_matches(r"\u00ea", word) + 0.013186*num_matches(r"\u00f4", word)
    elseif language == "ja"
      return 0.192934 + 0.401897*num_matches(r"\uff57", word) + 0.391781*num_matches(r"\uff37", word) + 0.345174*num_matches(r"\uff16", word) + 0.337752*num_matches(r"\uff17", word) + 0.335693*num_matches(r"\uff18", word) + 0.305787*num_matches(r"\uff19", word) + 0.284248*num_matches(r"\uff13", word) + 0.260788*num_matches(r"\uff14", word) + 0.250454*num_matches(r"\uff32", word) + 0.249550*num_matches(r"\uff52", word) + 0.239987*num_matches(r"\uff48", word) + 0.232954*num_matches(r"\uff15", word) + 0.224712*num_matches(r"\uff28", word) + 0.201113*num_matches(r"\uff4d", word) + 0.198311*num_matches(r"\uff56", word) + 0.197385*num_matches(r"\uff12", word) + 0.195817*num_matches(r"\uff23", word) + 0.194144*num_matches(r"\uff2c", word) + 0.191657*num_matches(r"\uff47", word) + 0.187868*num_matches(r"\uff4e", word) + 0.183400*num_matches(r"\uff27", word) + 0.181215*num_matches(r"\uff50", word) + 0.177365*num_matches(r"\uff2d", word) + 0.175796*num_matches(r"\uff34", word) + 0.175779*num_matches(r"\uff11", word) + 0.174960*num_matches(r"\uff42", word) + 0.172881*num_matches(r"\uff49", word) + 0.171703*num_matches(r"\uff43", word) + 0.171623*num_matches(r"\uff4c", word) + 0.168697*num_matches(r"\uff53", word) + 0.166248*num_matches(r"\uff54", word) + 0.162419*num_matches(r"\uff25", word) + 0.161625*num_matches(r"\uff2a", word) + 0.159372*num_matches(r"\uff22", word) + 0.158361*num_matches(r"\uff55", word) + 0.158059*num_matches(r"\uff24", word) + 0.156341*num_matches(r"\uff41", word) + 0.153941*num_matches(r"\uff45", word) + 0.153059*num_matches(r"\uff39", word) + 0.149345*num_matches(r"\uff33", word) + 0.147929*num_matches(r"\uff2e", word) + 0.146199*num_matches(r"\uff46", word) + 0.144357*num_matches(r"\uff35", word) + 0.144285*num_matches(r"\uff44", word) + 0.134242*num_matches(r"\uff21", word) + 0.132635*num_matches(r"\uff26", word) + 0.129675*num_matches(r"\uff29", word) + 0.122793*num_matches(r"\uff4b", word) + 0.122485*num_matches(r"\uff2b", word) + 0.122419*num_matches(r"\uff30", word) + 0.122348*num_matches(r"\uff4f", word) + 0.117883*num_matches(r"\uff36", word) + 0.116234*num_matches(r"\uff59", word) + 0.110487*num_matches(r"^[\u4E00-\u9FFF]", word) + 0.104395*num_matches(r"\u304f", word) + 0.100524*num_matches(r"\u30b6", word) + 0.099742*num_matches(r"\u30ba", word) + 0.095281*num_matches(r"\u5cf6", word) + 0.094178*num_matches(r"\u30ab", word) + 0.094091*num_matches(r"\u308f", word) + 0.088825*num_matches(r"\u30bc", word) + 0.086408*num_matches(r"\u30b5", word) + 0.086084*num_matches(r"[\u4E00-\u9FFF]\$", word) + 0.083627*num_matches(r"\u30dd", word) + 0.082973*num_matches(r"\uff2f", word) + 0.082004*num_matches(r"\u304c", word) + 0.081355*num_matches(r"\u30bb", word) + 0.080537*num_matches(r"\u56fd", word) + 0.080233*num_matches(r"\u90ce", word) + 0.076580*num_matches(r"\u30b9", word) + 0.071712*num_matches(r"\u30db", word) + 0.071397*num_matches(r"\u30cb", word) + 0.070678*num_matches(r"\u30b3", word) + 0.070540*num_matches(r"\u30cf", word) + 0.069523*num_matches(r"\u305f", word) + 0.066932*num_matches(r"\u30d1", word) + 0.066558*num_matches(r"\u7acb", word) + 0.066497*num_matches(r"\u30c8", word) + 0.065144*num_matches(r"\u30bf", word) + 0.065009*num_matches(r"\u308d", word) + 0.064780*num_matches(r"\u3068", word) + 0.064771*num_matches(r"\u3064", word) + 0.063986*num_matches(r"\u30af", word) + 0.062007*num_matches(r"\u5357", word) + 0.061800*num_matches(r"\u30bd", word) + 0.060136*num_matches(r"\u30e4", word) + 0.059696*num_matches(r"\u307e", word) + 0.059586*num_matches(r"\u30d9", word) + 0.059112*num_matches(r"\u30ef", word) + 0.058790*num_matches(r"\u3084", word) + 0.058416*num_matches(r"\u30b0", word) + 0.058322*num_matches(r"\u5ddd", word) + 0.058256*num_matches(r"\u30ad", word) + 0.058247*num_matches(r"\u30ea", word) + 0.057527*num_matches(r"\u30e1", word) + 0.057262*num_matches(r"\u30c9", word) + 0.057210*num_matches(r"\u5c71", word) + 0.056999*num_matches(r"\u30cc", word) + 0.056670*num_matches(r"\u30e0", word) + 0.056596*num_matches(r"\u30d3", word) + 0.056482*num_matches(r"\u672c", word) + 0.055207*num_matches(r"\u30d4", word) + 0.055031*num_matches(r"\u30c0", word) + 0.054831*num_matches(r"\u4e2d", word) + 0.054312*num_matches(r"\u305b", word) + 0.053996*num_matches(r"\u3053", word) + 0.053672*num_matches(r"\u30b7", word) + 0.053307*num_matches(r"\u30cd", word) + 0.053183*num_matches(r"\u3061", word) + 0.053151*num_matches(r"\u30ed", word) + 0.053137*num_matches(r"\u30fc", word) + 0.052671*num_matches(r"\u30b8", word) + 0.052482*num_matches(r"\u30ce", word) + 0.052469*num_matches(r"\u30df", word) + 0.052218*num_matches(r"\u3059", word) + 0.051149*num_matches(r"\u30d0", word) + 0.051120*num_matches(r"\u30c1", word) + 0.050576*num_matches(r"\u3055", word) + 0.050530*num_matches(r"\u9ad8", word) + 0.050406*num_matches(r"\u3051", word) + 0.050285*num_matches(r"\u30d5", word) + 0.049924*num_matches(r"\u30b2", word) + 0.049910*num_matches(r"\u3057", word) + 0.049552*num_matches(r"\u30d2", word) + 0.048954*num_matches(r"\u304d", word) + 0.048841*num_matches(r"\u30e2", word) + 0.047662*num_matches(r"\u306a", word) + 0.046810*num_matches(r"\u30d7", word) + 0.046802*num_matches(r"\u306e", word) + 0.046168*num_matches(r"\u3046", word) + 0.045981*num_matches(r"\u30f3", word) + 0.045687*num_matches(r"\u3089", word) + 0.045390*num_matches(r"\u30ec", word) + 0.045015*num_matches(r"\u30ac", word) + 0.044927*num_matches(r"\u30da", word) + 0.044909*num_matches(r"\u884c", word) + 0.043977*num_matches(r"\u30de", word) + 0.043935*num_matches(r"\u30f4", word) + 0.043439*num_matches(r"\u30c4", word) + 0.042776*num_matches(r"\u307f", word) + 0.042713*num_matches(r"\u30ca", word) + 0.041510*num_matches(r"\u30c3", word) + 0.039911*num_matches(r"\u30e9", word) + 0.039382*num_matches(r"\u30ae", word) + 0.036680*num_matches(r"\u5317", word) + 0.034881*num_matches(r"\u30b1", word) + 0.034862*num_matches(r"\u30eb", word) + 0.033453*num_matches(r"\u539f", word) + 0.033265*num_matches(r"\u65b0", word) + 0.031582*num_matches(r"^[\u3040-\u30FA\uFF66-\uFF9D]{3}", word) + 0.031414*num_matches(r"\u795e", word) + 0.030574*num_matches(r"\u30d6", word) + 0.030494*num_matches(r"\u30dc", word) + 0.030311*num_matches(r"\u3063", word) + 0.030213*num_matches(r"\u30c6", word) + 0.029947*num_matches(r".", word) + 0.029441*num_matches(r"[\u4E00-\u9FFF]", word) + 0.027448*num_matches(r"\u3093", word) + 0.026703*num_matches(r"\u3052", word) + 0.026097*num_matches(r"\u308a", word) + 0.025692*num_matches(r"\u3081", word) + 0.024119*num_matches(r"\u3044", word) + 0.023380*num_matches(r"\u30a2", word) + 0.022242*num_matches(r"\u3058", word) + 0.021137*num_matches(r"\u4e0a", word) + 0.019239*num_matches(r"\u30a6", word) + 0.018306*num_matches(r"\u30c7", word) + 0.017776*num_matches(r"\u6b63", word) + 0.017477*num_matches(r"\u9577", word) + 0.013000*num_matches(r"\u5e73", word) + 0.012673*num_matches(r"\u30b4", word) + 0.009949*num_matches(r"\u6771", word) + 0.009247*num_matches(r"\u897f", word) + 0.006630*num_matches(r"\u30a8", word) + 0.006460*num_matches(r"[^\u4E00-\u9FFF\u3040-\u30FA\uFF66-\uFF9D]", word)
  end
end


"""
  `spoken_length(str, language="en-US")`

  Estimates the time in seconds that it would take to say a piece of text.

  Credit for this algorithm should go to [Hal Daumé III](http://nlpers.blogspot.co.uk/2015/09/how-longll-it-take-to-say-that.html).
  The implementation here is based on his Python implementation. In short, the
  algorithm finds certain features using regular expressions and assigns a weight
  to each of them, based on data collected during experiments with speech synthesis
  software, with some modification for inter-word gaps.
"""
function spoken_length(str::String, language::String="en-US")

  languages = ["en-us", "de", "fr", "it", "es", "ja"]
  if ! (lowercase(language) in languages)
    error("Requested language '$language' is not supported.")
  end

  #Divvy our string.
  words = split(str)

  #
  time = -0.116751 + 0.099640 * length(words)

  for word in words
    time += 0.691677 * time_word(word, language)
  end

  #sanity check output
  if time < 0
    return 0
  else
    return time
  end
end

export spoken_length, syllable_count
